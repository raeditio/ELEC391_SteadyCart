clc; clear; close all;
syms s

%% System Parameters
M = 4;      % Cart Mass (kg)
m = 0.5;    % Pendulum Mass (kg)
l = 0.3;    % Pendulum Length (m)
g = 9.81;   % Gravity (m/s^2)

%% Define Transfer Function Symbolically
den_s = M * l * s^2 - (M + m) * g;  % M*l*s^2 - (M+m)*g

%% Convert to Transfer Function (Numerator is 1)
num = 1;
den = [M*l, 0, -(M+m)*g];  % Now using symbolic parameters

G_theta = tf(num, den);  % Create Transfer Function
disp('Transfer Function G_theta(s):');
G_theta

%% Automatic PID Tuning
C = pidtune(G_theta, 'PID');  % Auto-tune PID controller
disp('Tuned PID Controller:');
C

%% Closed-Loop System
T = feedback(C * G_theta, 1);  % Closed-loop transfer function

%% Simulation
t = 0:0.01:5;    % Time vector (5 sec)
u = ones(size(t)); % Step input

[y, t] = step(T, t);  % Simulate Step Response

%% Plot Results
figure;
plot(t, y, 'b', 'LineWidth', 2);
grid on;
xlabel('Time (s)');
ylabel('Angular Displacement \theta (rad)');
title('Step Response of PID-Controlled Inverted Pendulum');
legend('Theta Output');
